# Copyright (c) Fensak, LLC.
# SPDX-License-Identifier: MPL-2.0
#
# -----             IMPORTANT             ------
# ----- DO NOT MODIFY THIS FILE BY HAND!! ------
# This file is autogenerated by senc, using the source in `_ci`.

version: 2.1
workflows:
  lint_test_release:
    jobs:
    - lint_test
    - build_linux_amd64:
        filters:
          branches:
            only:
            - main
            - release
    - build_linux_arm64:
        filters:
          branches:
            only:
            - main
            - release
    - build_windows_amd64:
        filters:
          branches:
            only:
            - main
            - release
    - build_darwin_arm64:
        filters:
          branches:
            only:
            - main
            - release
    - release:
        context: Fensak CI/CD
        requires:
        - build_linux_amd64
        - build_linux_arm64
        - build_windows_amd64
        - build_darwin_arm64
        filters:
          branches:
            only:
            - release
jobs:
  lint_test:
    docker:
    - image: cimg/rust:1.73-node
    resource_class: arm.large
    steps:
    - add_ssh_keys:
        fingerprints:
        - 8f:1a:b4:37:9c:ca:cf:49:04:e7:ce:0d:b5:ee:2a:0d
    - checkout
    - restore_cache:
        keys:
        - senc-test-cargo-{{ arch }}-{{ checksum "Cargo.lock" }}
        - senc-test-cargo-{{ arch }}-
    - run:
        name: cargo fmt check
        command: cargo fmt --check
    - run:
        name: cargo build check
        command: cargo check
    - run:
        name: install pnpm
        command: sudo corepack enable && sudo corepack prepare pnpm@latest-8 --activate
    - run:
        name: install test script dependencies
        working_directory: ./tests/fixtures
        command: pnpm install
    - run:
        name: cargo test
        command: cargo test
    - save_cache:
        key: senc-test-cargo-{{ arch }}-{{ checksum "Cargo.lock" }}
        paths:
        - ./target
  build_linux_amd64:
    docker:
    - image: cimg/rust:1.73
    steps:
    - add_ssh_keys:
        fingerprints:
        - 8f:1a:b4:37:9c:ca:cf:49:04:e7:ce:0d:b5:ee:2a:0d
    - checkout
    - restore_cache:
        keys:
        - senc-build-cargo-{{ arch }}-{{ checksum "Cargo.lock" }}
        - senc-build-cargo-{{ arch }}-
    - run:
        name: build senc
        command: cargo build --release
    - save_cache:
        key: senc-build-cargo-{{ arch }}-{{ checksum "Cargo.lock" }}
        paths:
        - ./target
    - run:
        name: package build artifact
        command: |2

          mkdir -p ./.build/prepartifact
          mkdir -p ./.build/artifact
          cp target/release/senc ./.build/prepartifact
          cp LICENSE ./.build/prepartifact

          cd ./.build/prepartifact
          tar -zcf ../artifact/senc-linux-amd64.tar.gz *
    - when:
        condition:
          matches:
            pattern: ^release$
            value: << pipeline.git.branch >>
        steps:
        - persist_to_workspace:
            root: .build/artifact
            paths:
            - senc-linux-amd64.tar.gz
  build_linux_arm64:
    docker:
    - image: cimg/rust:1.73
    resource_class: arm.large
    steps:
    - add_ssh_keys:
        fingerprints:
        - 8f:1a:b4:37:9c:ca:cf:49:04:e7:ce:0d:b5:ee:2a:0d
    - checkout
    - restore_cache:
        keys:
        - senc-build-cargo-{{ arch }}-{{ checksum "Cargo.lock" }}
        - senc-build-cargo-{{ arch }}-
    - run:
        name: build senc
        command: cargo build --release
    - save_cache:
        key: senc-build-cargo-{{ arch }}-{{ checksum "Cargo.lock" }}
        paths:
        - ./target
    - run:
        name: package build artifact
        command: |2

          mkdir -p ./.build/prepartifact
          mkdir -p ./.build/artifact
          cp target/release/senc ./.build/prepartifact
          cp LICENSE ./.build/prepartifact

          cd ./.build/prepartifact
          tar -zcf ../artifact/senc-linux-arm64.tar.gz *
    - when:
        condition:
          matches:
            pattern: ^release$
            value: << pipeline.git.branch >>
        steps:
        - persist_to_workspace:
            root: .build/artifact
            paths:
            - senc-linux-arm64.tar.gz
  build_darwin_arm64:
    macos:
      xcode: 15.0.0
    resource_class: macos.m1.medium.gen1
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
    steps:
    - add_ssh_keys:
        fingerprints:
        - 8f:1a:b4:37:9c:ca:cf:49:04:e7:ce:0d:b5:ee:2a:0d
    - checkout
    - restore_cache:
        keys:
        - senc-build-cargo-{{ arch }}-{{ checksum "Cargo.lock" }}
        - senc-build-cargo-{{ arch }}-
    - run:
        name: install rust
        command: |2

          brew install rustup
          rustup-init -y
          echo 'export PATH="$HOME/.cargo/bin:$PATH"' >> "$BASH_ENV"
    - run:
        name: build senc
        command: cargo build --release
    - save_cache:
        key: senc-build-cargo-{{ arch }}-{{ checksum "Cargo.lock" }}
        paths:
        - ./target
    - run:
        name: package build artifact
        command: |2

          mkdir -p ./.build/prepartifact
          mkdir -p ./.build/artifact
          cp target/release/senc ./.build/prepartifact
          cp LICENSE ./.build/prepartifact

          cd ./.build/prepartifact
          tar -zcf ../artifact/senc-darwin-arm64.tar.gz *
    - when:
        condition:
          matches:
            pattern: ^release$
            value: << pipeline.git.branch >>
        steps:
        - persist_to_workspace:
            root: .build/artifact
            paths:
            - senc-darwin-arm64.tar.gz
  build_windows_amd64:
    machine:
      image: windows-server-2022-gui:current
    resource_class: windows.medium
    shell: powershell.exe -ExecutionPolicy Bypass
    environment:
      PYTHON: C:\Python311\python
    steps:
    - add_ssh_keys:
        fingerprints:
        - 8f:1a:b4:37:9c:ca:cf:49:04:e7:ce:0d:b5:ee:2a:0d
    - checkout
    - run:
        name: setup build env
        command: |2

          choco uninstall -y rust
          choco install -y rust-ms
    - restore_cache:
        keys:
        - senc-build-cargo-{{ arch }}-{{ checksum "Cargo.lock" }}
        - senc-build-cargo-{{ arch }}-
    - run:
        name: build senc
        command: cargo build --release
    - save_cache:
        key: senc-build-cargo-{{ arch }}-{{ checksum "Cargo.lock" }}
        paths:
        - ./target
    - run:
        name: package build artifact
        command: |2

          New-Item -Name ".build" -Type Directory
          New-Item -Name ".build\prepartifact" -Type Directory
          New-Item -Name ".build\artifact" -Type Directory
          Copy-Item -Path "target\release\senc.exe" -Destination ".build\prepartifact"
          Copy-Item -Path "LICENSE" -Destination ".build\prepartifact"
          Set-Location -Path ".build\prepartifact"
          tar -zcf "..\artifact\senc-windows-amd64-msvc.tar.gz" *
    - when:
        condition:
          matches:
            pattern: ^release$
            value: << pipeline.git.branch >>
        steps:
        - persist_to_workspace:
            root: .build/artifact
            paths:
            - senc-windows-amd64-msvc.tar.gz
  release:
    docker:
    - image: cimg/node:lts
    steps:
    - add_ssh_keys:
        fingerprints:
        - 8f:1a:b4:37:9c:ca:cf:49:04:e7:ce:0d:b5:ee:2a:0d
    - attach_workspace:
        at: /tmp/artifact
    - run:
        command: ls -lah /tmp/artifact
    - checkout
    - run:
        name: download github-app-token CLI
        working_directory: /tmp
        command: |2

          curl -sLO https://github.com/fensak-io/github-app-token/releases/download/v0.0.1/github-app-token_linux_amd64.tar.gz
          tar -xvf github-app-token_linux_amd64.tar.gz
    - run:
        name: semantic-release
        command: |2

          export GITHUB_APP_PRIVATE_KEY="$(echo -n "$GITHUB_APP_PRIVATE_KEY_B64" | base64 -d)"
          export GITHUB_TOKEN="$(/tmp/github-app-token --repo fensak-io/senc)"

          npm install semantic-release-replace-plugin @semantic-release/git
          npx -y semantic-release@^22.0.5
